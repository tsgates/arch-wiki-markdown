#!/usr/bin/bash

ROOT=/usr/share/doc/arch-wiki-markdown
LESS="vim -u /usr/share/vim/vim7*/macros/less.vim -n"

usage()
{
cat << EOF
usage: $0 options

This script run the test1 or test2 over a machine.

OPTIONS:
   -h      Show this message
   -g      Test type, can be ‘test1′ or ‘test2′
   -#1     -1 for first match, -2 for second ...
   -p      Plain text mode. No interactive mode.

See $ROOT
EOF
}

# we require input
if [[ $# == 0 ]]; then
  usage
  exit 0
fi

# parse options
AWESOME_STYLE=1
while [[ $# > 0 ]]; do
  case $1 in
    -h|--help)
      usage
      exit
    ;;
    -g|--grep)
      shift
      GLOBAL_SEARCH="$1"
      shift
    ;;
    -n|--normal)
      AWESOME_STYLE=0
      shift
    ;;
    -l|--list)
      find $ROOT
      exit 0
    ;;
    -v|--version)
      cat $ROOT/version
      exit 0
    ;;
    *)
      break
    ;;
  esac
done

# grep
if [[ -n $GLOBAL_SEARCH  ]]; then
  echo "Searching for $GLOBAL_SEARCH"
 (cd $ROOT; grep --color=always -rn "$GLOBAL_SEARCH" | less -X -F -R)
  exit
fi

# search title
KEY=N/A
NTH=0
while [ -n "$1" ]; do
  case $1 in
    -*) NTH=${1##-}; AWESOME_STYLE=0 ;;
    *)  KEY=$1 ;;
  esac
  shift
done

# trim/search
NTH=$((NTH - 1))
DOC=( $(ls $ROOT | grep -i $KEY) )

# open a doc
open() {
  $LESS -c 'set syntax=markdown' $ROOT/${DOC[$1]}
  exit 0
}

# no match
if [[ ${#DOC[*]} == 0 ]]; then
  echo "Can't find $KEY"
  exit 1
fi

# single match or nth is specified
if [[ ${#DOC[*]} == 1 ]] || [[ $NTH != -1 ]]; then
  open $NTH
else
  # menu
  for ((cnt=0; cnt<${#DOC[*]}; cnt ++)); do
    if [ $AWESOME_STYLE -eq 1  ] ; then 
       echo -n "[$((cnt+1))] "
    fi
    echo ${DOC[$cnt]}
  done

  # now ask the user for number
  if [ $AWESOME_STYLE -eq 1 ] ; then
    upto=${#DOC[*]}
    echo ; # just for nice formatting
    while true; do
      read -p "Please choose a number from the list [1-$upto|q]: " input
      case $input in
        [Qq]*) exit;;
        [0-9]*) 
          if ((1<=$input && $input<=$upto)) ; then
			echo "Opening" ${DOC[$input-1]};
			open $(($input-1))
          else
			echo "Invalid number" $input;
		  fi
          ;;
        *) echo "Invalid option. Use q to quit.";;
      esac
    done
  fi
fi
